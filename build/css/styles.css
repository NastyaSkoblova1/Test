/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */

html {
  line-height: 1.15; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */

figcaption,
figure,
main { /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"], /* 1 */
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */

details, /* 1 */
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */

template {
  display: none;
}

/* Hidden
   ========================================================================== */

/**
 * Add the correct display in IE 10-.
 */

[hidden] {
  display: none;
}

.test__btn,
.test__btn-result {
  display: inline-block;
  position: relative;
  margin: 0;
  padding: 0;
  border: none;
  text-align: center;
  cursor: pointer;
  text-decoration: none;
  outline: none;
  background-color: transparent;
  color: inherit;
  font: inherit;
}
.slider__arrow,
.test__restart {
  color: inherit;
  text-decoration: none;
}
*,
*:after,
*:before {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background-color: #fff;
  font-size: 16px;
}
@media only screen and (min-width: 1024px) {
  html {
    font-size: calc(12px + (16 - 12) * (100vw - 320px) / (1280 - 320));
  }
}
body {
  font-family: 'Roboto', sans-serif;
  color: #000;
  line-height: 1.15;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
     -moz-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
}
.slider {
  position: relative;
  width: 300px;
  overflow: hidden;
  margin: 0 auto;
}
@media only screen and (min-width: 768px) {
  .slider {
    width: 500px;
  }
}
.slider__arrow {
  position: absolute;
  top: 38%;
  z-index: 10;
  width: 15px;
  height: 30px;
  background-repeat: no-repeat;
  background-position: 0 0;
  background-size: 100% 100%;
  cursor: pointer;
}
@media only screen and (min-width: 768px) {
  .slider__arrow {
    width: 20px;
    height: 35px;
  }
}
.slider__arrow_prev {
  left: 10px;
  background-image: url("../img/task2/arrow-prev.png");
}
@media only screen and (min-width: 768px) {
  .slider__arrow_prev {
    left: 20px;
  }
}
.slider__arrow_next {
  right: 10px;
  background-image: url("../img/task2/arrow-next.png");
}
@media only screen and (min-width: 768px) {
  .slider__arrow_next {
    right: 20px;
  }
}
.slider-wrap {
  width: 10000px;
  position: relative;
  top: 0;
  left: -300px;
}
@media only screen and (min-width: 768px) {
  .slider-wrap {
    left: -500px;
  }
}
.slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  float: left;
  width: 300px;
}
@media only screen and (min-width: 768px) {
  .slide {
    width: 500px;
  }
}
.transition {
  -webkit-transition: 0.8s;
  -o-transition: 0.8s;
  transition: 0.8s;
}
.item {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.item__sale {
  position: absolute;
  top: 10px;
  right: 10px;
  z-index: 5;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 50px;
  height: 50px;
  background-color: #ff4a4a;
  border-radius: 50%;
}
.item__sale span {
  font-size: 12px;
  font-weight: 400;
  text-transform: uppercase;
  color: #fff;
}
.item__img-wrap {
  position: relative;
  width: 100%;
  height: 300px;
  margin-bottom: 20px;
}
@media only screen and (min-width: 768px) {
  .item__img-wrap {
    height: 500px;
  }
}
.item__img {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}
.item._1 .item__img {
  background-image: url("../img/task2/1.jpg");
  -webkit-transition: background-image 0.2s ease;
  -o-transition: background-image 0.2s ease;
  transition: background-image 0.2s ease;
}
.item._1:hover .item__img, .item._1:focus .item__img {
  background-image: url("../img/task2/1-h.jpg");
}
.item._2 .item__img {
  background-image: url("../img/task2/2.jpg");
}
.item._3 .item__img {
  background-image: url("../img/task2/3.jpg");
}
.item._4 .item__img {
  background-image: url("../img/task2/4.jpg");
}
.item._5 .item__img {
  background-image: url("../img/task2/5.jpg");
}
.item._6 .item__img {
  background-image: url("../img/task2/6.jpg");
}
.item__title {
  margin-bottom: 8px;
  font-size: 18px;
  font-weight: 700;
  line-height: 1.35;
  color: #000;
}
@media only screen and (min-width: 768px) {
  .item__title {
    margin-bottom: 12px;
    font-size: 20px;
  }
}
.item__price {
  font-size: 14px;
  line-height: 1.35;
  color: #000;
}
@media only screen and (min-width: 768px) {
  .item__price {
    font-size: 16px;
  }
}
.item__price_old {
  text-decoration: line-through;
  color: #bdbdbd;
}
html {
  height: 100%;
  background-color: #f3f3f3;
}
main {
  padding: 30px 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
.test {
  position: relative;
  width: 100%;
  padding-top: 1.25rem;
  padding-bottom: 1.875rem;
  padding-left: 0.9375rem;
  padding-right: 0.9375rem;
  font-family: Arial, sans-serif;
  background-color: #fff;
  -webkit-box-shadow: 0 0 5px rgba(0,0,0,0.4);
          box-shadow: 0 0 5px rgba(0,0,0,0.4);
}
@media only screen and (min-width: 768px) {
  .test {
    max-width: 650px;
    padding-top: 2.1875rem;
    padding-bottom: 1.875rem;
    padding-left: 1.875rem;
    padding-right: 1.875rem;
    border-radius: 3px;
  }
}
.test__item,
.test__result {
  display: none;
  position: relative;
  top: 0;
  left: 0;
}
.test__item.show,
.test__result.show {
  display: block;
}
.test__row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
.test__btn,
.test__btn-result {
  display: none;
  padding: 15px 30px;
  font-size: 1.25rem;
  font-weight: 600;
  color: #fff;
  background-color: #c89f6d;
  border-radius: 5px;
  -webkit-box-shadow: 0px 2px 0 1px #bb894b;
          box-shadow: 0px 2px 0 1px #bb894b;
  -webkit-transition: background-color 0.3s ease;
  -o-transition: background-color 0.3s ease;
  transition: background-color 0.3s ease;
}
.test__btn:hover,
.test__btn-result:hover,
.test__btn:focus,
.test__btn-result:focus {
  background-color: #bb894b;
}
.test__quest {
  padding-bottom: 1.25rem;
  border-bottom: 1px solid #cec6c6;
}
@media only screen and (min-width: 768px) {
  .test__quest {
    padding-bottom: 1.875rem;
  }
}
.test__quest-text {
  font-size: 1.25rem;
  font-weight: 700;
}
@media only screen and (min-width: 768px) {
  .test__quest-text {
    font-size: 1.5rem;
  }
}
.test__quest-img {
  margin-bottom: 0.625rem;
}
@media only screen and (min-width: 768px) {
  .test__quest-img {
    margin-bottom: 1.25rem;
  }
}
.test__quest-img img {
  max-width: 100%;
}
.test__answers {
  padding-bottom: 2.8125rem;
}
@media only screen and (min-width: 768px) {
  .test__answers {
    padding-bottom: 4.0625rem;
  }
}
.test__answer {
  padding: 1.25rem;
  border-bottom: 1px solid #cec6c6;
}
.test__radio {
  display: none;
}
.test__radio + label {
  display: block;
  position: relative;
  padding-left: 2.1875rem;
  font-size: 1.125rem;
  line-height: 1;
  cursor: pointer;
}
@media only screen and (min-width: 768px) {
  .test__radio + label {
    font-size: 1.25rem;
  }
}
.test__radio + label::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  width: 20px;
  height: 20px;
  background-color: transparent;
  border: 1px solid #898b8b;
  border-radius: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  -webkit-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  transition: all 0.3s ease;
}
.test__radio:checked + label::before,
.test__radio:checked:hover + label::before,
.test__radio:checked:focus + label::before {
  background-color: #45acac;
  border: 2px solid #45acac;
  -webkit-box-shadow: inset 0 0 0 2px #fff;
          box-shadow: inset 0 0 0 2px #fff;
}
.test__radio:hover + label::before, .test__radio:focus + label::before {
  border: 3px solid #45acac;
}
.test__radio:disabled:hover + label::before, .test__radio:disabled:focus + label::before {
  border: 1px solid #898b8b;
}
.test__result {
  text-align: center;
  min-height: 750px;
}
.test__result-wrap {
  position: relative;
}
.test__result-wrap::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  background-color: rgba(0,0,0,0.3);
}
.test__result-wrap img {
  max-width: 100%;
}
.test__result-desc {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 10;
  width: 100%;
  color: #fff;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}
.test__result-wrap {
  margin-bottom: 1.25rem;
  font-size: 0;
}
@media only screen and (min-width: 768px) {
  .test__result-wrap {
    margin-bottom: 1.875rem;
  }
}
.test__result-count {
  margin-bottom: 0.625rem;
  font-size: 1.875rem;
  font-weight: 700;
}
@media only screen and (min-width: 768px) {
  .test__result-count {
    margin-bottom: 1.25rem;
    font-size: 2.8125rem;
  }
}
.test__result-variant {
  font-size: 1.25rem;
  font-weight: 600;
}
@media only screen and (min-width: 768px) {
  .test__result-variant {
    font-size: 1.875rem;
  }
}
.test__result-text {
  margin-bottom: 1.875rem;
  font-family: 'Times New Roman', serif;
  font-size: 1.125rem;
  text-align: left;
  line-height: 1.3;
  color: #000;
}
@media only screen and (min-width: 768px) {
  .test__result-text {
    font-size: 1.375rem;
    line-height: 1.4;
  }
}
.test__restart {
  position: relative;
  display: inline-block;
  margin-bottom: 0.9375rem;
  margin-left: -2.1875rem;
  padding-left: 2.1875rem;
  font-size: 1.125rem;
  font-weight: 600;
  color: #a68151;
}
@media only screen and (min-width: 768px) {
  .test__restart {
    font-size: 1.25rem;
  }
}
.test__restart::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  width: 18px;
  height: 22px;
  background-image: url("../img/task3/reps.png");
  background-repeat: no-repeat;
  background-position: 0 0;
  background-size: cover;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
}
@media only screen and (min-width: 768px) {
  .test__restart::before {
    width: 22px;
    height: 26px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJwbGFjZWhvbGRlci5zdHlsIiwic3R5bGVzLmNzcyIsImNvbW1vbi5zdHlsIiwibWl4aW5zLnN0eWwiLCIuLi8uLi9wYWdlcy90YXNrMi90YXNrMi5zdHlsIiwiLi4vLi4vcGFnZXMvdGFzazMvdGFzazMuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RUFBQTs7QUFFQTtnRkFDRzs7QUFFSDs7OztHQUlDOztBQUVEO0VBQ0Usa0JBQUEsQ0FBQSxPQUFBO0VBQ0EsMkJBQUEsQ0FBQSxPQUFBO0VBQ0EsK0JBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7Z0ZBQ0c7O0FBRUg7O0dBRUM7O0FBRUQ7RUFDRSxVQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7Ozs7OztFQU1FLGVBQUE7Q0FDRjs7QUFFQTs7O0dBR0M7O0FBRUQ7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7Q0FDRjs7QUFFQTtnRkFDRzs7QUFFSDs7O0dBR0M7O0FBRUQ7O09BRUEsT0FBQTtFQUNFLGVBQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDtFQUNFLGlCQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEO0VBQ0UsZ0NBQUE7VUFBQSx3QkFBQSxDQUFBLE9BQUE7RUFDQSxVQUFBLENBQUEsT0FBQTtFQUNBLGtCQUFBLENBQUEsT0FBQTtDQUNGOztBQUVBOzs7R0FHQzs7QUFFRDtFQUNFLGtDQUFBLENBQUEsT0FBQTtFQUNBLGVBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7Z0ZBQ0c7O0FBRUg7OztHQUdDOztBQUVEO0VBQ0UsOEJBQUEsQ0FBQSxPQUFBO0VBQ0Esc0NBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEO0VBQ0Usb0JBQUEsQ0FBQSxPQUFBO0VBQ0EsMkJBQUEsQ0FBQSxPQUFBO0VBQ0EsMENBQUE7VUFBQSxrQ0FBQSxDQUFBLE9BQUE7Q0FDRjs7QUFFQTs7R0FF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Q0FBQTtVQUFBLGlDQUFBO0NKaXFCRDtBSS9wQkE7RUFDQyx1QkFBQTtFQUNBLGFBQUE7Q0ppcUJEO0FFaHRCc0M7RUFBQTtJRWtEcEMsd0JBQUE7R0prcUJBO0NBQ0Y7QUlqcUJBO0VBQ0Msd0JBQUE7RUFDQSxvQkFBQTtFQUNBLGlCQUFBO0NKbXFCRDtBRTF0QnNDO0VBQUE7SUUwRHBDLHVCQUFBO0lBQ0EscUJBQUE7R0pvcUJBO0NBQ0Y7QUlucUJBO0VBQ0MsbUJBQUE7RUFDQSxpQkFBQTtDSnFxQkQ7QUVwdUJzQztFQUFBO0lFa0VwQyxvQkFBQTtHSnNxQkE7Q0FDRjtBSXJxQkE7RUFDQyx3QkFBQTtFQUNBLHNDQUFBO0VBQ0Esb0JBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsWUFBQTtDSnVxQkQ7QUVqdkJzQztFQUFBO0lFNkVwQyxvQkFBQTtJQUNBLGlCQUFBO0dKd3FCQTtDQUNGO0FJdnFCQTtFQUVDLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSx5QkFBQTtFQUNBLHdCQUFBO0VBQ0Esd0JBQUE7RUFDQSxvQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtDSndxQkQ7QUVqd0JzQztFQUFBO0lFNEZwQyxtQkFBQTtHSnlxQkE7Q0FDRjtBSXhxQkM7RUFDQyxZQUFBO0VBQ0EsbUJBQUE7RUFDQSxTQUFBO0VBQ0EsUUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsK0NBQUE7RUFDQSw2QkFBQTtFQUNBLHlCQUFBO0VBQ0EsdUJBQUE7RUFDQSxvQ0FBQTtNQUFBLGdDQUFBO1VBQUEsNEJBQUE7Q0owcUJGO0FFbnhCc0M7RUFBQTtJRTRHbkMsWUFBQTtJQUNBLGFBQUE7R0oycUJEO0NBQ0YiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY3LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpblxuICogICAgSUUgb24gV2luZG93cyBQaG9uZSBhbmQgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4geyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctIGFuZCBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiJGlucHV0LXJlc2V0XG5cdGRpc3BsYXkgaW5saW5lLWJsb2NrXG5cdHBvc2l0aW9uIHJlbGF0aXZlXG5cdG1hcmdpbiAwXG5cdHBhZGRpbmcgMFxuXHRib3JkZXIgbm9uZVxuXHRiYWNrZ3JvdW5kLWNvbG9yIHRyYW5zcGFyZW50XG5cdG91dGxpbmUgbm9uZVxuXHRmb250IGluaGVyaXRcblxuJGJ0bi1yZXNldFxuXHRkaXNwbGF5IGlubGluZS1ibG9ja1xuXHRwb3NpdGlvbiByZWxhdGl2ZVxuXHRtYXJnaW4gMFxuXHRwYWRkaW5nIDBcblx0Ym9yZGVyIG5vbmVcblx0dGV4dC1hbGlnbiBjZW50ZXJcblx0Y3Vyc29yIHBvaW50ZXJcblx0dGV4dC1kZWNvcmF0aW9uIG5vbmVcblx0b3V0bGluZSBub25lXG5cdGJhY2tncm91bmQtY29sb3IgdHJhbnNwYXJlbnRcblx0Y29sb3IgaW5oZXJpdFxuXHRmb250IGluaGVyaXRcblxuJGxpc3QtcmVzZXRcblx0bGlzdC1zdHlsZSBub25lXG5cdHBhZGRpbmcgMFxuXHRtYXJnaW4gMFxuXG4kbGluay1yZXNldFxuXHRjb2xvciBpbmhlcml0XG5cdHRleHQtZGVjb3JhdGlvbiBub25lXG5cbiRoLXJlc2V0XG5cdG1hcmdpbi10b3AgMFxuXHRtYXJnaW4tYm90dG9tIDBcblx0Zm9udC1zaXplIGluaGVyaXRcblx0Zm9udC13ZWlnaHQgbm9ybWFsXG5cbiRjZW50ZXJcblx0bWFyZ2luLWxlZnQgYXV0b1xuXHRtYXJnaW4tcmlnaHQgYXV0b1xuXG4kaGlkZS10ZXh0XG5cdG92ZXJmbG93IGhpZGRlblxuXHR0ZXh0LWluZGVudCAxMDAlXG5cdHdoaXRlLXNwYWNlIG5vd3JhcFxuXG4kZnVsbC1jZW50ZXJcblx0cG9zaXRpb24gYWJzb2x1dGVcblx0dG9wIDBcblx0bGVmdCAwXG5cdHJpZ2h0IDBcblx0Ym90dG9tIDBcblx0bWFyZ2luIGF1dG9cblxuLy8gTUlDUk8gQ0xFQVJGSVhcbiRjZlxuXHQmXG5cdFx0Knpvb20gMVxuXHQmOmJlZm9yZSwgJjphZnRlclxuXHRcdGNvbnRlbnQgXCJcIlxuXHRcdGRpc3BsYXkgdGFibGVcblx0JjphZnRlclxuXHRcdGNsZWFyIGJvdGhcbiIsIi8qISBub3JtYWxpemUuY3NzIHY3LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpblxuICogICAgSUUgb24gV2luZG93cyBQaG9uZSBhbmQgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4geyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctIGFuZCBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4udGVzdF9fYnRuLFxuLnRlc3RfX2J0bi1yZXN1bHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udDogaW5oZXJpdDtcbn1cbi5zbGlkZXJfX2Fycm93LFxuLnRlc3RfX3Jlc3RhcnQge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuKixcbio6YWZ0ZXIsXG4qOmJlZm9yZSB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiBjYWxjKDEycHggKyAoMTYgLSAxMikgKiAoMTAwdncgLSAzMjBweCkgLyAoMTI4MCAtIDMyMCkpO1xuICB9XG59XG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzAwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuLnNsaWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDMwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNsaWRlciB7XG4gICAgd2lkdGg6IDUwMHB4O1xuICB9XG59XG4uc2xpZGVyX19hcnJvdyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAzOCU7XG4gIHotaW5kZXg6IDEwO1xuICB3aWR0aDogMTVweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxMDAlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zbGlkZXJfX2Fycm93IHtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDM1cHg7XG4gIH1cbn1cbi5zbGlkZXJfX2Fycm93X3ByZXYge1xuICBsZWZ0OiAxMHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvdGFzazIvYXJyb3ctcHJldi5wbmdcIik7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zbGlkZXJfX2Fycm93X3ByZXYge1xuICAgIGxlZnQ6IDIwcHg7XG4gIH1cbn1cbi5zbGlkZXJfX2Fycm93X25leHQge1xuICByaWdodDogMTBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL3Rhc2syL2Fycm93LW5leHQucG5nXCIpO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2xpZGVyX19hcnJvd19uZXh0IHtcbiAgICByaWdodDogMjBweDtcbiAgfVxufVxuLnNsaWRlci13cmFwIHtcbiAgd2lkdGg6IDEwMDAwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAtMzAwcHg7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zbGlkZXItd3JhcCB7XG4gICAgbGVmdDogLTUwMHB4O1xuICB9XG59XG4uc2xpZGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiAzMDBweDtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNsaWRlIHtcbiAgICB3aWR0aDogNTAwcHg7XG4gIH1cbn1cbi50cmFuc2l0aW9uIHtcbiAgdHJhbnNpdGlvbjogMC44cztcbn1cbi5pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLml0ZW1fX3NhbGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTBweDtcbiAgcmlnaHQ6IDEwcHg7XG4gIHotaW5kZXg6IDU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY0YTRhO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG4uaXRlbV9fc2FsZSBzcGFuIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI2ZmZjtcbn1cbi5pdGVtX19pbWctd3JhcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5pdGVtX19pbWctd3JhcCB7XG4gICAgaGVpZ2h0OiA1MDBweDtcbiAgfVxufVxuLml0ZW1fX2ltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG4uaXRlbS5fMSAuaXRlbV9faW1nIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL3Rhc2syLzEuanBnXCIpO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWltYWdlIDAuMnMgZWFzZTtcbn1cbi5pdGVtLl8xOmhvdmVyIC5pdGVtX19pbWcge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvdGFzazIvMS1oLmpwZ1wiKTtcbn1cbi5pdGVtLl8yIC5pdGVtX19pbWcge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvdGFzazIvMi5qcGdcIik7XG59XG4uaXRlbS5fMyAuaXRlbV9faW1nIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL3Rhc2syLzMuanBnXCIpO1xufVxuLml0ZW0uXzQgLml0ZW1fX2ltZyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy90YXNrMi80LmpwZ1wiKTtcbn1cbi5pdGVtLl81IC5pdGVtX19pbWcge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvdGFzazIvNS5qcGdcIik7XG59XG4uaXRlbS5fNiAuaXRlbV9faW1nIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL3Rhc2syLzYuanBnXCIpO1xufVxuLml0ZW1fX3RpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM1O1xuICBjb2xvcjogIzAwMDtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLml0ZW1fX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgfVxufVxuLml0ZW1fX3ByaWNlIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMS4zNTtcbiAgY29sb3I6ICMwMDA7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5pdGVtX19wcmljZSB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG4uaXRlbV9fcHJpY2Vfb2xkIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG4gIGNvbG9yOiAjYmRiZGJkO1xufVxuaHRtbCB7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMztcbn1cbm1haW4ge1xuICBwYWRkaW5nOiAzMHB4IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLnRlc3Qge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLXRvcDogMjBwcjtcbiAgcGFkZGluZy1ib3R0b206IDMwcHI7XG4gIHBhZGRpbmctbGVmdDogMTVwcjtcbiAgcGFkZGluZy1yaWdodDogMTVwcjtcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3gtc2hhZG93OiAwIDAgNXB4IHJnYmEoMCwwLDAsMC40KTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRlc3Qge1xuICAgIG1heC13aWR0aDogNjUwcHg7XG4gICAgcGFkZGluZy10b3A6IDM1cHI7XG4gICAgcGFkZGluZy1ib3R0b206IDMwcHI7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHByO1xuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHI7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICB9XG59XG4udGVzdF9faXRlbSxcbi50ZXN0X19yZXN1bHQge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbn1cbi50ZXN0X19pdGVtLnNob3csXG4udGVzdF9fcmVzdWx0LnNob3cge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi50ZXN0X19yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi50ZXN0X19idG4sXG4udGVzdF9fYnRuLXJlc3VsdCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBhZGRpbmc6IDE1cHggMzBweDtcbiAgZm9udC1zaXplOiAyMHByO1xuICBmb250LXdlaWdodDogNjAwO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M4OWY2ZDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3gtc2hhZG93OiAwcHggMnB4IDAgMXB4ICNiYjg5NGI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xufVxuLnRlc3RfX2J0bjpob3Zlcixcbi50ZXN0X19idG4tcmVzdWx0OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2JiODk0Yjtcbn1cbi50ZXN0X19xdWVzdCB7XG4gIHBhZGRpbmctYm90dG9tOiAyMHByO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NlYzZjNjtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRlc3RfX3F1ZXN0IHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMzBwcjtcbiAgfVxufVxuLnRlc3RfX3F1ZXN0LXRleHQge1xuICBmb250LXNpemU6IDIwcHI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0X19xdWVzdC10ZXh0IHtcbiAgICBmb250LXNpemU6IDI0cHI7XG4gIH1cbn1cbi50ZXN0X19xdWVzdC1pbWcge1xuICBtYXJnaW4tYm90dG9tOiAxMHByO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGVzdF9fcXVlc3QtaW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHByO1xuICB9XG59XG4udGVzdF9fcXVlc3QtaW1nIGltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi50ZXN0X19hbnN3ZXJzIHtcbiAgcGFkZGluZy1ib3R0b206IDQ1cHI7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0X19hbnN3ZXJzIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNjVwcjtcbiAgfVxufVxuLnRlc3RfX2Fuc3dlciB7XG4gIHBhZGRpbmc6IDIwcHI7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2VjNmM2O1xufVxuLnRlc3RfX3JhZGlvIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi50ZXN0X19yYWRpbyArIGxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiAzNXByO1xuICBmb250LXNpemU6IDE4cHI7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0X19yYWRpbyArIGxhYmVsIHtcbiAgICBmb250LXNpemU6IDIwcHI7XG4gIH1cbn1cbi50ZXN0X19yYWRpbyArIGxhYmVsOjpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4OThiOGI7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLnRlc3RfX3JhZGlvOmNoZWNrZWQgKyBsYWJlbDo6YmVmb3JlLFxuLnRlc3RfX3JhZGlvOmNoZWNrZWQ6aG92ZXIgKyBsYWJlbDo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1YWNhYztcbiAgYm9yZGVyOiAycHggc29saWQgIzQ1YWNhYztcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICNmZmY7XG59XG4udGVzdF9fcmFkaW86aG92ZXIgKyBsYWJlbDo6YmVmb3JlIHtcbiAgYm9yZGVyOiAzcHggc29saWQgIzQ1YWNhYztcbn1cbi50ZXN0X19yYWRpbzpkaXNhYmxlZDpob3ZlciArIGxhYmVsOjpiZWZvcmUge1xuICBib3JkZXI6IDFweCBzb2xpZCAjODk4YjhiO1xufVxuLnRlc3RfX3Jlc3VsdCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWluLWhlaWdodDogNzUwcHg7XG59XG4udGVzdF9fcmVzdWx0LXdyYXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4udGVzdF9fcmVzdWx0LXdyYXA6OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjMpO1xufVxuLnRlc3RfX3Jlc3VsdC13cmFwIGltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi50ZXN0X19yZXN1bHQtZGVzYyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgei1pbmRleDogMTA7XG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG4udGVzdF9fcmVzdWx0LXdyYXAge1xuICBtYXJnaW4tYm90dG9tOiAyMHByO1xuICBmb250LXNpemU6IDA7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0X19yZXN1bHQtd3JhcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBwcjtcbiAgfVxufVxuLnRlc3RfX3Jlc3VsdC1jb3VudCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHI7XG4gIGZvbnQtc2l6ZTogMzBwcjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRlc3RfX3Jlc3VsdC1jb3VudCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBwcjtcbiAgICBmb250LXNpemU6IDQ1cHI7XG4gIH1cbn1cbi50ZXN0X19yZXN1bHQtdmFyaWFudCB7XG4gIGZvbnQtc2l6ZTogMjBwcjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRlc3RfX3Jlc3VsdC12YXJpYW50IHtcbiAgICBmb250LXNpemU6IDMwcHI7XG4gIH1cbn1cbi50ZXN0X19yZXN1bHQtdGV4dCB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHI7XG4gIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMThwcjtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgY29sb3I6ICMwMDA7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0X19yZXN1bHQtdGV4dCB7XG4gICAgZm9udC1zaXplOiAyMnByO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIH1cbn1cbi50ZXN0X19yZXN0YXJ0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDE1cHI7XG4gIG1hcmdpbi1sZWZ0OiAtMzVwcjtcbiAgcGFkZGluZy1sZWZ0OiAzNXByO1xuICBmb250LXNpemU6IDE4cHI7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjYTY4MTUxO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGVzdF9fcmVzdGFydCB7XG4gICAgZm9udC1zaXplOiAyMHByO1xuICB9XG59XG4udGVzdF9fcmVzdGFydDo6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxOHB4O1xuICBoZWlnaHQ6IDIycHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy90YXNrMy9yZXBzLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0X19yZXN0YXJ0OjpiZWZvcmUge1xuICAgIHdpZHRoOiAyMnB4O1xuICAgIGhlaWdodDogMjZweDtcbiAgfVxufVxuIiwiLy8gPT09PT09PT09PVxuLy8gUHJvamVjdCBnbG9iYWwgc3R5bGVzXG4vLyA9PT09PT09PT09XG5cbi8vIGJveC1zaXppbmcgcmVzZXRcbiosICo6YWZ0ZXIsICo6YmVmb3JlXG5cdGJveC1zaXppbmc6IGluaGVyaXRcblxuaHRtbFxuXHRib3gtc2l6aW5nIGJvcmRlci1ib3hcblx0YmFja2dyb3VuZC1jb2xvciBodG1sX2JnXG5cdGZvbnQtc2l6ZSAxNnB4XG5cdFxuXHQrYWJvdmUoMTAyNHB4KVxuXHRcdGZvbnQtc2l6ZSBjYWxjKDEycHggKyAoMTYgLSAxMikgKiAoMTAwdncgLSAzMjBweCkgLyAoMTI4MCAtIDMyMCkpXG5cbmJvZHlcblx0Zm9udC1mYW1pbHkgYm9keV9mb250XG5cdGNvbG9yIGJvZHlfY29sb3Jcblx0bGluZS1oZWlnaHQgYm9keV9saFxuXHQvLyBzYWZhcmkgc21vb3RoIGZvbnQuIHByZWZpeCBtYW5kYXRvcnkuXG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmcgYW50aWFsaWFzZWRcblx0Ly8gcHJldmVudCBmcyBzY2FsZSBvbiBpb3Mgc2FmYXJpXG5cdHRleHQtc2l6ZS1hZGp1c3QgMTAwJVxuXG4vLyA9PT09PT09PT09XG4vLyBBYnN0cmFjdCBjbGFzc1xuLy8gPT09PT09PT09PVxuIiwiLy8gZW1cbmVtKHB4dmFsLCBmcz0gZmFsc2UsIGJhc2U9IGJyb3dzZXJfZnMpXG5cdGlmIGZzIGFuZCB1bml0KGZzKSA9PSAnZW0nXG5cdFx0KHB4dmFsIC8gKGJhc2UgKiBmcykpZW1cblx0ZWxzZSBpZiBmcyBhbmQgdW5pdChmcykgPT0gJ3B4J1xuXHRcdChweHZhbCAvIGZzKWVtXG5cdGVsc2Vcblx0XHQocHh2YWwgLyBiYXNlKWVtXG5cblxuLy8gcmVtXG5yZW0ocHh2YWwsIGJhc2U9IGJyb3dzZXJfZnMpXG5cdChweHZhbCAvIGJhc2UpcmVtXG5cblxuLy8gcGFsY2Vob2xkZXJcbnBsYWNlaG9sZGVyKClcblx0Jjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlclxuXHRcdHtibG9ja31cblx0JjotbW96LXBsYWNlaG9sZGVyXG5cdFx0e2Jsb2NrfVxuXHQmOjotbW96LXBsYWNlaG9sZGVyXG5cdFx0e2Jsb2NrfVxuXHQmOi1tcy1pbnB1dC1wbGFjZWhvbGRlclxuXHRcdHtibG9ja31cblxuXG4vLyBTcHJpdGUgbWl4aW4gLSBTVEFSVFxuXG5zcHJpdGVXaWR0aCgkc3ByaXRlKVxuXHR3aWR0aCAkc3ByaXRlWzRdXG5cbnNwcml0ZUhlaWdodCgkc3ByaXRlKVxuXHRoZWlnaHQgJHNwcml0ZVs1XVxuXG5zcHJpdGVQb3NpdGlvbigkc3ByaXRlKVxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uICRzcHJpdGVbMl0gJHNwcml0ZVszXVxuXG5zcHJpdGVJbWFnZSgkc3ByaXRlKVxuXHRiYWNrZ3JvdW5kLWltYWdlIHVybCguLi9pbWcvJHNwcml0ZVs4XSlcblxuXG5zcHJpdGVXaWR0aF8yeCgkc3ByaXRlKSB7XG5cdHdpZHRoOiAoJHNwcml0ZVs0XSk7XG59XG5cbnNwcml0ZUhlaWdodF8yeCgkc3ByaXRlKSB7XG5cdGhlaWdodDogKCRzcHJpdGVbNV0pO1xufVxuXG5zcHJpdGVQb3NpdGlvbl8yeCgkc3ByaXRlKSB7XG5cdGJhY2tncm91bmQtcG9zaXRpb246ICgkc3ByaXRlWzExXS8yKSAoJHNwcml0ZVsxMl0vMik7XG59XG5cbnNwcml0ZUltYWdlXzJ4KCRzcHJpdGUpIHtcblx0YmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy8kc3ByaXRlWzE3XSk7XG59XG5zcHJpdGVfMngoJHNwcml0ZSlcblx0c3ByaXRlSW1hZ2VfMngoJHNwcml0ZSlcblx0c3ByaXRlUG9zaXRpb25fMngoJHNwcml0ZSlcblx0c3ByaXRlV2lkdGhfMngoJHNwcml0ZSlcblx0c3ByaXRlSGVpZ2h0XzJ4KCRzcHJpdGUpXG5cdGJhY2tncm91bmQtc2l6ZSAoJHNwcml0ZVsxNV0vMikgKCRzcHJpdGVbMTZdLzIpXG5cbnNwcml0ZSgkc3ByaXRlKVxuXHRpZiAhbWF0Y2goJ2hvdmVyJywgc2VsZWN0b3IoKSkgJiYgIW1hdGNoKCdhY3RpdmUnLCBzZWxlY3RvcigpKVxuXHRcdHNwcml0ZUltYWdlKCRzcHJpdGUpXG5cdHNwcml0ZVBvc2l0aW9uKCRzcHJpdGUpXG5cdHNwcml0ZVdpZHRoKCRzcHJpdGUpXG5cdHNwcml0ZUhlaWdodCgkc3ByaXRlKVxuXG5yZXRpbmFfc3ByaXRlKCRzcHJpdGUpXG5cdHNwcml0ZSgkc3ByaXRlKVxuXHRAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksICAobWluLXJlc29sdXRpb246IDE5MmRwaSlcblx0XHRzcHJpdGVfMngoJHNwcml0ZSlcblxuLy8gU3ByaXRlIG1peGluIC0gRU5EXG5cblxuLy8gbmliL3Bvc2l0aW9ucy5zdHlsXG4vLyA9PT09PT09PT09PT09PT09PVxuLy8gc2l6ZS5zdHlsXG5zaXplKClcblx0aWYgbGVuZ3RoKGFyZ3VtZW50cykgPT0gMVxuXHRcdHdpZHRoOiBhcmd1bWVudHNbMF1cblx0XHRoZWlnaHQ6IGFyZ3VtZW50c1swXVxuXHRlbHNlXG5cdFx0d2lkdGg6IGFyZ3VtZW50c1swXVxuXHRcdGhlaWdodDogYXJndW1lbnRzWzFdXG5cbi8vIHBvc2l0aW9ucy5zdHlsXG4tcG9zKHR5cGUsIGFyZ3MpXG5cdGkgPSAwXG5cdHBvc2l0aW9uOiB1bnF1b3RlKHR5cGUpXG5cdGZvciBqIGluICgxLi40KVxuXHRcdGlmIGxlbmd0aChhcmdzKSA+IGlcblx0XHRcdHthcmdzW2ldfTogYXJnc1tpICsgMV0gaXMgYSAndW5pdCcgPyBhcmdzW2kgKz0gMV0gOiAwXG5cdFx0aSArPSAxXG5cbmZpeGVkKClcblx0LXBvcygnZml4ZWQnLCBhcmd1bWVudHMpXG5cbmFic29sdXRlKClcblx0LXBvcygnYWJzb2x1dGUnLCBhcmd1bWVudHMpXG5cbnJlbGF0aXZlKClcblx0LXBvcygncmVsYXRpdmUnLCBhcmd1bWVudHMpXG5cblxuLy8gQG1lZGlhIG1peGlucyAoUmFwdHVyZSByZXBsYWNlKVxuLy8gPT09PT09PT09PT09PT09PT1cbmFib3ZlKHZhbClcblx0QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiB2YWwpXG5cdFx0e2Jsb2NrfVxuXG5iZWxvdyh2YWwpXG5cdEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogdmFsKVxuXHRcdHtibG9ja31cblxuYmV0d2VlbihtaW4sIG1heClcblx0QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBtaW4pIGFuZCAobWF4LXdpZHRoOiBtYXgpXG5cdFx0e2Jsb2NrfVxuXG5yZXRpbmEoKVxuXHRAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpLCBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTkyZHBpKVxuXHRcdHtibG9ja31cblxubGFuZHNjYXBlKClcblx0QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSlcblx0XHR7YmxvY2t9XG5cbnBvcnRyYWl0KClcblx0QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAob3JpZW50YXRpb246IHBvcnRyYWl0KVxuXHRcdHtibG9ja31cbiIsIi5zbGlkZXJcblx0cG9zaXRpb24gcmVsYXRpdmVcblx0d2lkdGggMzAwcHhcblx0b3ZlcmZsb3cgaGlkZGVuXG5cdG1hcmdpbiAwIGF1dG9cblx0XG5cdCthYm92ZSg3NjhweClcblx0XHR3aWR0aCA1MDBweFxuXHRcdFxuXHQmX19hcnJvd1xuXHRcdEBleHRlbmQgJGxpbmstcmVzZXRcblx0XHRwb3NpdGlvbiBhYnNvbHV0ZVxuXHRcdHRvcCAzOCVcblx0XHR6LWluZGV4IDEwXG5cdFx0d2lkdGggMTVweFxuXHRcdGhlaWdodCAzMHB4XG5cdFx0YmFja2dyb3VuZC1yZXBlYXQgbm8tcmVwZWF0XG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbiAwIDBcblx0XHRiYWNrZ3JvdW5kLXNpemUgMTAwJSAxMDAlXG5cdFx0Y3Vyc29yIHBvaW50ZXJcblx0XHRcblx0XHQrYWJvdmUoNzY4cHgpXG5cdFx0XHR3aWR0aCAyMHB4XG5cdFx0XHRoZWlnaHQgMzVweFxuXHRcdFxuXHRcdCZfcHJldlxuXHRcdFx0bGVmdCAxMHB4XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCguLi9pbWcvdGFzazIvYXJyb3ctcHJldi5wbmcpXG5cdFx0XHRcblx0XHRcdCthYm92ZSg3NjhweClcblx0XHRcdFx0bGVmdCAyMHB4XG5cdFx0XG5cdFx0Jl9uZXh0XG5cdFx0XHRyaWdodCAxMHB4XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCguLi9pbWcvdGFzazIvYXJyb3ctbmV4dC5wbmcpXG5cdFx0XHRcblx0XHRcdCthYm92ZSg3NjhweClcblx0XHRcdFx0cmlnaHQgMjBweFxuXG4uc2xpZGVyLXdyYXBcblx0d2lkdGggMTAwMDBweFxuXHRwb3NpdGlvbiByZWxhdGl2ZVxuXHR0b3AgMFxuXHRsZWZ0IC0zMDBweFxuXHRcblx0K2Fib3ZlKDc2OHB4KVxuXHRcdGxlZnQgLTUwMHB4XG5cbi5zbGlkZVxuXHRkaXNwbGF5IGZsZXhcblx0ZmxleC1kaXJlY3Rpb24gY29sdW1uXG5cdGp1c3RpZnktY29udGVudCBjZW50ZXJcblx0ZmxvYXQgbGVmdFxuXHR3aWR0aCAzMDBweFxuXHRcblx0K2Fib3ZlKDc2OHB4KVxuXHRcdHdpZHRoIDUwMHB4XG5cbi50cmFuc2l0aW9uXG5cdHRyYW5zaXRpb24gLjhzXG5cbi5pdGVtXG5cdHBvc2l0aW9uIHJlbGF0aXZlXG5cdGRpc3BsYXkgZmxleFxuXHRmbGV4LWRpcmVjdGlvbiBjb2x1bW5cblx0YWxpZ24taXRlbXMgY2VudGVyXG5cdFxuXHQmX19zYWxlXG5cdFx0cG9zaXRpb24gYWJzb2x1dGVcblx0XHR0b3AgMTBweFxuXHRcdHJpZ2h0IDEwcHhcblx0XHR6LWluZGV4IDVcblx0XHRkaXNwbGF5IGZsZXhcblx0XHRqdXN0aWZ5LWNvbnRlbnQgY2VudGVyXG5cdFx0YWxpZ24taXRlbXMgY2VudGVyXG5cdFx0d2lkdGggNTBweFxuXHRcdGhlaWdodCA1MHB4XG5cdFx0YmFja2dyb3VuZC1jb2xvciAjZmY0YTRhXG5cdFx0Ym9yZGVyLXJhZGl1cyA1MCVcblx0XHRcblx0XHQmIHNwYW5cblx0XHRcdGZvbnQtc2l6ZSAxMnB4XG5cdFx0XHRmb250LXdlaWdodCA0MDBcblx0XHRcdHRleHQtdHJhbnNmb3JtIHVwcGVyY2FzZVxuXHRcdFx0Y29sb3Igd2hpdGVcblx0XHRcdFxuXHQmX19pbWctd3JhcFxuXHRcdHBvc2l0aW9uIHJlbGF0aXZlXG5cdFx0d2lkdGggMTAwJVxuXHRcdGhlaWdodCAzMDBweFxuXHRcdG1hcmdpbi1ib3R0b20gMjBweFxuXHRcdFxuXHRcdCthYm92ZSg3NjhweClcblx0XHRcdGhlaWdodCA1MDBweFxuXG5cdCZfX2ltZ1xuXHRcdHBvc2l0aW9uIGFic29sdXRlXG5cdFx0dG9wIDBcblx0XHRib3R0b20gMFxuXHRcdGxlZnQgMFxuXHRcdHJpZ2h0IDBcblx0XHRiYWNrZ3JvdW5kLXJlcGVhdCBuby1yZXBlYXRcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uIGNlbnRlclxuXHRcdGJhY2tncm91bmQtc2l6ZSBjb3ZlclxuXG5cdCYuXzFcblx0XHQmIC5pdGVtX19pbWdcblx0XHRcdGJhY2tncm91bmQtaW1hZ2UgdXJsKC4uL2ltZy90YXNrMi8xLmpwZylcblx0XHRcdHRyYW5zaXRpb24gYmFja2dyb3VuZC1pbWFnZSAuMnMgZWFzZVxuXHRcdFx0XG5cdFx0Jjpob3ZlclxuXHRcdFx0JiAuaXRlbV9faW1nXG5cdFx0XHRcdGJhY2tncm91bmQtaW1hZ2UgdXJsKC4uL2ltZy90YXNrMi8xLWguanBnKVxuXG5cdCYuXzJcblx0XHQmIC5pdGVtX19pbWdcblx0XHRcdGJhY2tncm91bmQtaW1hZ2UgdXJsKC4uL2ltZy90YXNrMi8yLmpwZylcblxuXHQmLl8zXG5cdFx0JiAuaXRlbV9faW1nXG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCguLi9pbWcvdGFzazIvMy5qcGcpXG5cblx0Ji5fNFxuXHRcdCYgLml0ZW1fX2ltZ1xuXHRcdFx0YmFja2dyb3VuZC1pbWFnZSB1cmwoLi4vaW1nL3Rhc2syLzQuanBnKVxuXG5cdCYuXzVcblx0XHQmIC5pdGVtX19pbWdcblx0XHRcdGJhY2tncm91bmQtaW1hZ2UgdXJsKC4uL2ltZy90YXNrMi81LmpwZylcblxuXHQmLl82XG5cdFx0JiAuaXRlbV9faW1nXG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCguLi9pbWcvdGFzazIvNi5qcGcpXG5cblx0Jl9fdGl0bGVcblx0XHRtYXJnaW4tYm90dG9tIDhweFxuXHRcdGZvbnQtc2l6ZSAxOHB4XG5cdFx0Zm9udC13ZWlnaHQgNzAwXG5cdFx0bGluZS1oZWlnaHQgMS4zNVxuXHRcdGNvbG9yIGJsYWNrXG5cdFx0XG5cdFx0K2Fib3ZlKDc2OHB4KVxuXHRcdFx0bWFyZ2luLWJvdHRvbSAxMnB4XG5cdFx0XHRmb250LXNpemUgMjBweFxuXG5cdCZfX3ByaWNlXG5cdFx0Zm9udC1zaXplIDE0cHhcblx0XHRsaW5lLWhlaWdodCAxLjM1XG5cdFx0Y29sb3IgYmxhY2tcblx0XHRcblx0XHQrYWJvdmUoNzY4cHgpXG5cdFx0XHRmb250LXNpemUgMTZweFxuXHRcdFx0XG5cdFx0Jl9vbGRcblx0XHRcdHRleHQtZGVjb3JhdGlvbiBsaW5lLXRocm91Z2hcblx0XHRcdGNvbG9yICNiZGJkYmRcblxuXHQiLCJodG1sXG5cdGhlaWdodCAxMDAlXG5cdGJhY2tncm91bmQtY29sb3IgI2YzZjNmM1xuXHRcbm1haW5cblx0cGFkZGluZyAzMHB4IDBcblx0ZGlzcGxheSBmbGV4XG5cdGp1c3RpZnktY29udGVudCBjZW50ZXJcblxuLnRlc3Rcblx0cG9zaXRpb24gcmVsYXRpdmVcblx0d2lkdGggMTAwJVxuXHRwYWRkaW5nLXRvcCAyMHByXG5cdHBhZGRpbmctYm90dG9tIDMwcHJcblx0cGFkZGluZy1sZWZ0IDE1cHJcblx0cGFkZGluZy1yaWdodCAxNXByXG5cdGZvbnQtZmFtaWx5IEFyaWFsLCBzYW5zLXNlcmlmXG5cdGJhY2tncm91bmQtY29sb3Igd2hpdGVcblx0Ym94LXNoYWRvdyAwIDAgNXB4IHJnYmEoMCwgMCwgMCwgMC40KVxuXHRcblx0K2Fib3ZlKDc2OHB4KVxuXHRcdG1heC13aWR0aCA2NTBweFxuXHRcdHBhZGRpbmctdG9wIDM1cHJcblx0XHRwYWRkaW5nLWJvdHRvbSAzMHByXG5cdFx0cGFkZGluZy1sZWZ0IDMwcHJcblx0XHRwYWRkaW5nLXJpZ2h0IDMwcHJcblx0XHRib3JkZXItcmFkaXVzIDNweFxuXHRcdFxuXG5cdCZfX2l0ZW0sICZfX3Jlc3VsdFxuXHRcdGRpc3BsYXkgbm9uZVxuXHRcdHBvc2l0aW9uIHJlbGF0aXZlXG5cdFx0dG9wIDBcblx0XHRsZWZ0IDBcblx0XHRcblx0XHQmLnNob3dcblx0XHRcdGRpc3BsYXkgYmxvY2tcblx0XG5cdCZfX3Jvd1xuXHRcdGRpc3BsYXkgZmxleFxuXHRcdGp1c3RpZnktY29udGVudCBjZW50ZXJcblx0XG5cdCZfX2J0biwgJl9fYnRuLXJlc3VsdFxuXHRcdEBleHRlbmQgJGJ0bi1yZXNldFxuXHRcdGRpc3BsYXkgbm9uZVxuXHRcdHBhZGRpbmcgMTVweCAzMHB4XG5cdFx0Zm9udC1zaXplIDIwcHJcblx0XHRmb250LXdlaWdodCA2MDBcblx0XHRjb2xvciB3aGl0ZVxuXHRcdGJhY2tncm91bmQtY29sb3IgI2M4OWY2ZFxuXHRcdGJvcmRlci1yYWRpdXMgNXB4XG5cdFx0Ym94LXNoYWRvdyAwcHggMnB4IDAgMXB4ICNjODlmNmQgLSAxNSVcblx0XHR0cmFuc2l0aW9uIGJhY2tncm91bmQtY29sb3IgLjNzIGVhc2Vcblx0XHRcblx0XHQmOmhvdmVyXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yICNjODlmNmQgLSAxNSVcblx0XG5cdCZfX3F1ZXN0XG5cdFx0cGFkZGluZy1ib3R0b20gMjBwclxuXHRcdGJvcmRlci1ib3R0b20gMXB4IHNvbGlkICNjZWM2YzZcblx0XHRcblx0XHQrYWJvdmUoNzY4cHgpXG5cdFx0XHRwYWRkaW5nLWJvdHRvbSAzMHByXG5cdFxuXHQmX19xdWVzdC10ZXh0XG5cdFx0Zm9udC1zaXplIDIwcHJcblx0XHRmb250LXdlaWdodCA3MDBcblx0XHRcblx0XHQrYWJvdmUoNzY4cHgpXG5cdFx0XHRmb250LXNpemUgMjRwclxuXHRcblx0Jl9fcXVlc3QtaW1nXG5cdFx0bWFyZ2luLWJvdHRvbSAxMHByXG5cdFx0XG5cdFx0K2Fib3ZlKDc2OHB4KVxuXHRcdFx0bWFyZ2luLWJvdHRvbSAyMHByXG5cdFx0XG5cdFx0aW1nXG5cdFx0XHRtYXgtd2lkdGggMTAwJVxuXHRcdFxuXHQmX19hbnN3ZXJzXG5cdFx0cGFkZGluZy1ib3R0b20gNDVwclxuXHRcdFxuXHRcdCthYm92ZSg3NjhweClcblx0XHRcdHBhZGRpbmctYm90dG9tIDY1cHJcblx0XG5cdCZfX2Fuc3dlclxuXHRcdHBhZGRpbmcgMjBwclxuXHRcdGJvcmRlci1ib3R0b20gMXB4IHNvbGlkICNjZWM2YzZcblx0XG5cdCZfX3JhZGlvXG5cdFx0ZGlzcGxheSBub25lXG5cdFxuXHQmX19yYWRpbyArIGxhYmVsXG5cdFx0ZGlzcGxheSBibG9ja1xuXHRcdHBvc2l0aW9uIHJlbGF0aXZlXG5cdFx0cGFkZGluZy1sZWZ0IDM1cHJcblx0XHRmb250LXNpemUgMThwclxuXHRcdGxpbmUtaGVpZ2h0IDFcblx0XHRjdXJzb3IgcG9pbnRlclxuXHRcdFxuXHRcdCthYm92ZSg3NjhweClcblx0XHRcdGZvbnQtc2l6ZSAyMHByXG5cdFxuXHQmX19yYWRpbyArIGxhYmVsOjpiZWZvcmVcblx0XHRjb250ZW50ICcnXG5cdFx0cG9zaXRpb24gYWJzb2x1dGVcblx0XHR0b3AgNTAlXG5cdFx0bGVmdCAwXG5cdFx0d2lkdGggMjBweFxuXHRcdGhlaWdodCAyMHB4XG5cdFx0YmFja2dyb3VuZC1jb2xvciB0cmFuc3BhcmVudFxuXHRcdGJvcmRlciAxcHggc29saWQgIzg5OGI4YlxuXHRcdGJvcmRlci1yYWRpdXMgNTAlXG5cdFx0dHJhbnNmb3JtIHRyYW5zbGF0ZVkoLTUwJSlcblx0XHR0cmFuc2l0aW9uIGFsbCAuM3MgZWFzZVxuXHRcblx0Jl9fcmFkaW86Y2hlY2tlZCArIGxhYmVsOjpiZWZvcmUsICZfX3JhZGlvOmNoZWNrZWQ6aG92ZXIgKyBsYWJlbDo6YmVmb3JlXG5cdFx0YmFja2dyb3VuZC1jb2xvciAjNDVhY2FjXG5cdFx0Ym9yZGVyIDJweCBzb2xpZCAjNDVhY2FjXG5cdFx0Ym94LXNoYWRvdyBpbnNldCAwIDAgMCAycHggd2hpdGVcblx0XG5cdCZfX3JhZGlvOmhvdmVyICsgbGFiZWw6OmJlZm9yZVxuXHRcdGJvcmRlciAzcHggc29saWQgIzQ1YWNhY1xuXHRcblx0Jl9fcmFkaW86ZGlzYWJsZWQ6aG92ZXIgKyBsYWJlbDo6YmVmb3JlXG5cdFx0Ym9yZGVyIDFweCBzb2xpZCAjODk4YjhiXG5cdFxuXHQmX19yZXN1bHRcblx0XHR0ZXh0LWFsaWduIGNlbnRlclxuXHRcdG1pbi1oZWlnaHQgNzUwcHhcblx0XG5cdCZfX3Jlc3VsdC13cmFwXG5cdFx0cG9zaXRpb24gcmVsYXRpdmVcblx0XHRcblx0XHQmOjphZnRlclxuXHRcdFx0Y29udGVudCAnJ1xuXHRcdFx0cG9zaXRpb24gYWJzb2x1dGVcblx0XHRcdHRvcCAwXG5cdFx0XHRib3R0b20gMFxuXHRcdFx0bGVmdCAwXG5cdFx0XHRyaWdodCAwXG5cdFx0XHR3aWR0aCAxMDAlXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yIHJnYmEoMCwgMCwgMCwgMC4zKVxuXHRcdFx0XG5cdFx0aW1nXG5cdFx0XHRtYXgtd2lkdGggMTAwJVxuXHRcdFxuXHQmX19yZXN1bHQtZGVzY1xuXHRcdHBvc2l0aW9uIGFic29sdXRlXG5cdFx0dG9wIDUwJVxuXHRcdGxlZnQgNTAlXG5cdFx0ei1pbmRleCAxMFxuXHRcdHdpZHRoIDEwMCVcblx0XHRjb2xvciB3aGl0ZVxuXHRcdHRyYW5zZm9ybSB0cmFuc2xhdGUoLTUwJSwgLTUwJSlcblx0XG5cdCZfX3Jlc3VsdC13cmFwXG5cdFx0bWFyZ2luLWJvdHRvbSAyMHByXG5cdFx0Zm9udC1zaXplIDBcblx0XHRcblx0XHQrYWJvdmUoNzY4cHgpXG5cdFx0XHRtYXJnaW4tYm90dG9tIDMwcHJcblx0XG5cdCZfX3Jlc3VsdC1jb3VudFxuXHRcdG1hcmdpbi1ib3R0b20gMTBwclxuXHRcdGZvbnQtc2l6ZSAzMHByXG5cdFx0Zm9udC13ZWlnaHQgNzAwXG5cdFx0XG5cdFx0K2Fib3ZlKDc2OHB4KVxuXHRcdFx0bWFyZ2luLWJvdHRvbSAyMHByXG5cdFx0XHRmb250LXNpemUgNDVwclxuXHRcblx0Jl9fcmVzdWx0LXZhcmlhbnRcblx0XHRmb250LXNpemUgMjBwclxuXHRcdGZvbnQtd2VpZ2h0IDYwMFxuXHRcdFxuXHRcdCthYm92ZSg3NjhweClcblx0XHRcdGZvbnQtc2l6ZSAzMHByXG5cdFxuXHQmX19yZXN1bHQtdGV4dFxuXHRcdG1hcmdpbi1ib3R0b20gMzBwclxuXHRcdGZvbnQtZmFtaWx5ICdUaW1lcyBOZXcgUm9tYW4nLCBzZXJpZlxuXHRcdGZvbnQtc2l6ZSAxOHByXG5cdFx0dGV4dC1hbGlnbiBsZWZ0XG5cdFx0bGluZS1oZWlnaHQgMS4zXG5cdFx0Y29sb3IgYmxhY2tcblx0XHRcblx0XHQrYWJvdmUoNzY4cHgpXG5cdFx0XHRmb250LXNpemUgMjJwclxuXHRcdFx0bGluZS1oZWlnaHQgMS40XG5cdFxuXHQmX19yZXN0YXJ0XG5cdFx0QGV4dGVuZCAkbGluay1yZXNldFxuXHRcdHBvc2l0aW9uIHJlbGF0aXZlXG5cdFx0ZGlzcGxheSBpbmxpbmUtYmxvY2tcblx0XHRtYXJnaW4tYm90dG9tIDE1cHJcblx0XHRtYXJnaW4tbGVmdCAtMzVwclxuXHRcdHBhZGRpbmctbGVmdCAzNXByXG5cdFx0Zm9udC1zaXplIDE4cHJcblx0XHRmb250LXdlaWdodCA2MDBcblx0XHRjb2xvciAjYTY4MTUxXG5cdFx0XG5cdFx0K2Fib3ZlKDc2OHB4KVxuXHRcdFx0Zm9udC1zaXplIDIwcHJcblx0XHRcblx0XHQmOjpiZWZvcmVcblx0XHRcdGNvbnRlbnQgJydcblx0XHRcdHBvc2l0aW9uIGFic29sdXRlXG5cdFx0XHR0b3AgNTAlXG5cdFx0XHRsZWZ0IDBcblx0XHRcdHdpZHRoIDE4cHhcblx0XHRcdGhlaWdodCAyMnB4XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCguLi9pbWcvdGFzazMvcmVwcy5wbmcpXG5cdFx0XHRiYWNrZ3JvdW5kLXJlcGVhdCBuby1yZXBlYXRcblx0XHRcdGJhY2tncm91bmQtcG9zaXRpb24gMCAwXG5cdFx0XHRiYWNrZ3JvdW5kLXNpemUgY292ZXJcblx0XHRcdHRyYW5zZm9ybSB0cmFuc2xhdGVZKC01MCUpXG5cdFx0XHRcblx0XHRcdCthYm92ZSg3NjhweClcblx0XHRcdFx0d2lkdGggMjJweFxuXHRcdFx0XHRoZWlnaHQgMjZweCJdfQ== */
